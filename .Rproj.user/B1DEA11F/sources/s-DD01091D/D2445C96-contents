library(shiny)
library(readxl)
library(tidyr)
library(lubridate)
library(ggplot2)
library(plotly)
library(stringr)
library(dplyr)
library(shinydashboard)
library(flexdashboard)
library(bizdays)
library(matrixStats)
library(rlang)



#Inicial_leilao <- read_excel("banco_de_dados.xlsx", skip=4, sheet = "leilao")

banco_de_dados_leilao <- read_excel("banco_de_dados.xlsx", 
                             sheet = "leilao", col_types = c("date", 
                                                             "text", "text", "date", "numeric", 
                                                             "numeric", "numeric", "numeric", 
                                                             "numeric", "skip", "skip", 
                                                             "numeric", "date", "date", 
                                                             "date", "text", "text", "text", 
                                                             "numeric", "date", "text", "numeric", 
                                                             "numeric", "date", "numeric", 
                                                             "numeric", "numeric", "text", "text", 
                                                             "skip", "skip", "numeric", 
                                                             "numeric", "numeric", "text", "numeric", 
                                                             "numeric", "numeric", "skip", 
                                                             "text", "numeric", "numeric", "numeric", 
                                                             "numeric", "numeric", "numeric", 
                                                             "numeric", "numeric", "numeric", 
                                                             "numeric", "numeric", "numeric", 
                                                             "skip", "skip", "numeric", 
                                                             "numeric", "numeric", "numeric", 
                                                             "numeric", "numeric", "numeric", 
                                                             "numeric", "numeric", "numeric", 
                                                             "numeric", "numeric", "numeric", 
                                                             "numeric", "skip", "skip", 
                                                             "numeric", "numeric", "numeric", 
                                                             "skip", "skip", "numeric", 
                                                             "date", "date", "numeric", 
                                                             "numeric", "numeric", "numeric", 
                                                             "numeric", "numeric", "numeric"), 
                             skip = 4)


banco_de_dados_proposta <- read_excel("banco_de_dados.xlsx", 
                             sheet = "proposta", col_types = c("date", 
                                                               "text", "text", "date", "numeric", 
                                                               "numeric", "text", "numeric", "text", 
                                                               "text", "numeric", "numeric", 
                                                               "numeric", "numeric", "numeric", 
                                                               "numeric", "text", "numeric", "numeric", 
                                                               "numeric"), skip = 4)

  
 

create.calendar("Brazil/ANBIMA", holidaysANBIMA, weekdays=c("saturday", "sunday"))

Ajuste_leilao <- banco_de_dados_leilao %>%
  rename(Data_leilao   = 1,
          tipo_de_leilao     = 2,
          Titulo     = 3,
          Titulo_vencimento = 4,
          Portaria = 5, 
          Data_liquidacao =`Data de liquid.`,
          Combinacao_nomes = 35,
          Consenso_piso = `Consenso piso`,
          Consenso_teto = `Consenso teto`,
          Secundario_piso_inicial = `Secund. piso`,
          Secundario_teto_inicial = `Secund. teto`,
          Taxa_aceita = `Aceit. taxa (%aa)`,
          Taxa_aceita_media = `Aceit. taxa média (%aa)`
          
          ) %>%
  
  mutate (Referencia = paste0(as.numeric(Data_leilao),Titulo,as.numeric(Titulo_vencimento)))

ajuste_leilao_restrita <- Ajuste_leilao %>%
                      select(Referencia,Consenso_piso, Consenso_teto,Secundario_piso_inicial,Secundario_teto_inicial,Taxa_aceita,Taxa_aceita_media )

Ajuste_proposta <- banco_de_dados_proposta %>%
  rename(Data_leilao   = 1,
         tipo_de_leilao     = 2,
         Titulo     = 3,
         Titulo_vencimento = 4,
         Portaria = 5 
         ) %>%
  mutate(Referencia = paste0(as.numeric(Data_leilao),Titulo,as.numeric(Titulo_vencimento)))
                    
proposta_total <- Ajuste_proposta %>%
             
              rename(Instituicao =`Instituição`,
                     aceitacao =`Aceitação`,
                     demanda_quantidade = `Demanda quant.`,
                     aceita_quantidade = `Aceit. quant.`,
                    Instituicao_selic =`Instituição (Selic)`,
                    Instituicao_resumo =`Instituição (resumo)`,
                    Instituicao_dealer =`Instituição (dealer)`) %>%
  
                  mutate(Data_leilao = as.Date(Data_leilao,origin="1899-12-30")) %>%
               mutate (Titulo_data = paste0(Titulo,Titulo_vencimento)) %>%
                    
  
              left_join(ajuste_leilao_restrita, by = 'Referencia' ) %>%
               
             filter(grepl("venda",tipo_de_leilao)) %>%
               
       mutate( prazo_dias_uteis = bizdays(Data_leilao,Titulo_vencimento, "Brazil/ANBIMA")) %>%
                mutate(Prazo_anos = round(prazo_dias_uteis/252,2)) %>%
    
     mutate(Prazo_referencia = case_when(
      Titulo == "ltn" & 0.25 < Prazo_anos & Prazo_anos <= 0.75 ~ 0.5,
      Titulo == "ltn" & 0.75 < Prazo_anos & Prazo_anos <= 1.5 ~ 1,
      Titulo == "ltn" & 1.5 < Prazo_anos & Prazo_anos <= 2.5 ~ 2,
      Titulo == "ltn" & 2.5 < Prazo_anos ~ 4,
      Titulo == "ntn-f" & Prazo_anos <= 4 ~ 3,
      #Titulo == "ntn-f" & 4 < Prazo_anos & Prazo_anos <= 5.5 ~ 5,
      Titulo == "ntn-f" & 5 < Prazo_anos & Prazo_anos <= 8.5 ~ 7,
      Titulo == "ntn-f" & 8.5 < Prazo_anos & Prazo_anos < 12 ~ 10,
      Titulo == "ntn-b" & 1 <= Prazo_anos & Prazo_anos < 6 ~ 5,
      Titulo == "ntn-b" & 6.01 < Prazo_anos & Prazo_anos < 11 ~ 10,
      Titulo == "ntn-b" & 11.1 < Prazo_anos & Prazo_anos <= 22 ~ 20,
      Titulo == "ntn-b" & 22.01 < Prazo_anos & Prazo_anos < 55 ~ 40,
      Titulo == "lft" & Prazo_anos < 1.5 ~ 1,
      Titulo == "lft" & 1.5 <= Prazo_anos & Prazo_anos < 4.5 ~ 3,
      Titulo == "lft" & Prazo_anos >= 4.5 ~ 6
      
    )) %>%
    
    mutate(Proposta_aceita = case_when(
      aceitacao == 1  ~ Taxa,
      TRUE ~ NA_real_)) %>%
    mutate(Proposta_rejeitada = case_when(
      aceitacao == 0  ~ Taxa,
      TRUE ~ NA_real_))

#Construção da por vértice:

#LTN 2 anos
#_________________________________

Fator_banda <- 1.96
Fator_distancia <- 2.95
Regra_portaria <- 0.35


#__________________________________
    
proposta_ltn_2 <- proposta_total %>%
  
  filter(grepl("ntn-f",Titulo)) %>%

  filter(grepl(10,Prazo_referencia)) %>%
 
#Caso para retirar Outlier (apenas 1 ano e 6 meses)
#_________________________________________________________
#proposta_ltn_2 <- proposta_ltn_2[ -c(1165), ] %>%
  
  mutate (Ano = year(Data_leilao)) %>%
  
  mutate(Secundario_teto =  if_else(Secundario_teto_inicial >= Secundario_piso_inicial, Secundario_teto_inicial, Secundario_piso_inicial)) %>%
  
  mutate(Secundario_piso =  if_else(Secundario_piso_inicial <= Secundario_teto_inicial, Secundario_piso_inicial, Secundario_teto_inicial)) %>%
  
  
  mutate(Acima_teto_total = case_when( Taxa > Secundario_teto  ~ 1,
         TRUE ~ 0)) %>%
  mutate(entre_teto_piso_total = case_when (Secundario_piso <= Taxa & Taxa <= Secundario_teto ~1,
                                            TRUE ~ 0 )) %>%
  
  mutate(abaixo_piso_total = case_when( Taxa < Secundario_piso  ~ 1,
                                       TRUE ~ 0)) %>%
  
  mutate(Acima_teto_aceita = case_when( Proposta_aceita > Secundario_teto  ~ 1,
                                       TRUE ~ 0)) %>%
  mutate(entre_teto_piso_aceita = case_when (Secundario_piso <= Proposta_aceita & Proposta_aceita <= Secundario_teto ~1,
                                            TRUE ~ 0 )) %>%
  
  mutate(abaixo_piso_aceita = case_when( Proposta_aceita < Secundario_piso  ~ 1,
                                        TRUE ~ 0)) %>%

  mutate(Nominal_acima_piso_secundario = (Taxa-Secundario_piso)) %>%
  mutate(Aceita_acima_piso_secundario = (Proposta_aceita-Secundario_piso)) %>%
  mutate(Rejeitada_acima_piso_secundario = (Proposta_rejeitada-Secundario_piso)) %>%
  
  mutate(Relativo_total_piso_secundario =  if_else(Secundario_piso == 0,Nominal_acima_piso_secundario ,((Nominal_acima_piso_secundario)/(Secundario_piso))*100)) %>%
  mutate(Relativo_aceita_piso_secundario =  if_else(Secundario_piso == 0,Aceita_acima_piso_secundario,((Aceita_acima_piso_secundario)/(Secundario_piso))*100)) %>%
  mutate(Relativo_rejeitada_piso_secundario =  if_else(Secundario_piso == 0,Rejeitada_acima_piso_secundario,((Rejeitada_acima_piso_secundario)/(Secundario_piso))*100)) %>%
  
  mutate(Media_total_relativo = cummean(Relativo_total_piso_secundario)) %>%
  
  mutate(Media_rejeitada_relativo = mean(Relativo_rejeitada_piso_secundario[!is.na(Relativo_rejeitada_piso_secundario)])) %>%
  
  mutate(Proposta_fora_banda = case_when(
  Relativo_total_piso_secundario <= Media_total_relativo-Fator_banda*sd(Relativo_total_piso_secundario,na.rm =TRUE)  ~ Relativo_total_piso_secundario,
  TRUE ~ NA_real_)) %>%
  
  mutate(Limite_inferior = Media_total_relativo-Fator_banda*sd(Relativo_total_piso_secundario,na.rm =TRUE)) %>%
  
  mutate(Limite_superior = Media_total_relativo+Fator_banda*sd(Relativo_total_piso_secundario,na.rm =TRUE)) %>%
  
  mutate(Linha_superior = Proposta_fora_banda+Fator_distancia*sd(Relativo_aceita_piso_secundario, na.rm=TRUE)) %>%
  
  mutate(Linha_inferior = Proposta_fora_banda-Fator_distancia*sd(Relativo_aceita_piso_secundario, na.rm=TRUE)) %>%
  
  mutate(Regra_atual = Secundario_piso-Regra_portaria) %>%
  
  mutate(Regra_atual_relativo = ((Regra_atual - Secundario_piso) / Secundario_piso )* 100)
  
#Médias condicionais Comulativas (propostas aceitas e não aceitas)
#_________________________________________________________

#Média dos valores aceitos (proporção acima piso secundario)

media_aceita_relativo <- proposta_ltn_2$Relativo_aceita_piso_secundario[1]

for (i in 2:length(proposta_ltn_2$Relativo_aceita_piso_secundario)) {
  soma_acum <- sum(proposta_ltn_2$Relativo_aceita_piso_secundario[1:i], na.rm = TRUE)
  qde_nao_nas <- length(which(!is.na(proposta_ltn_2$Relativo_aceita_piso_secundario[1:i])))
  media_cum_ponto <- soma_acum / qde_nao_nas
  
  media_aceita_relativo <- c(media_aceita_relativo, media_cum_ponto)
}


proposta_ltn_2$media_aceita_relativo <- media_aceita_relativo


#_______________________________________________________________________________________________

#Média dos valores rejeitados comulativa (proporção abaixo piso secundario)

media_rejeitada_relativo <- proposta_ltn_2$Relativo_rejeitada_piso_secundario[1]

for (i in 2:length(proposta_ltn_2$Relativo_rejeitada_piso_secundario)) {
  soma_acum <- sum(proposta_ltn_2$Relativo_rejeitada_piso_secundario[1:i], na.rm = TRUE)
  qde_nao_nas <- length(which(!is.na(proposta_ltn_2$Relativo_rejeitada_piso_secundario[1:i])))
  media_cum_ponto <- soma_acum / qde_nao_nas
  
  media_rejeitada_relativo <- c(media_rejeitada_relativo, media_cum_ponto)
}


proposta_ltn_2$media_rejeitada_relativo <- media_rejeitada_relativo

proposta_ltn_2 <- proposta_ltn_2 %>%
          mutate(Intervalo_piso = media_aceita_relativo - 3*abs(media_rejeitada_relativo-media_aceita_relativo))

#____________________________________________________________________________________________________

# Proporções_base de dados Prefixado 2 anos: Quanto das propostas estão entre piso e teto

#Total de Propostas
#_______________________________

proporcao_intervalo_total <- proposta_ltn_2 %>%
  group_by(Data_leilao, Acima_teto_total , entre_teto_piso_total , abaixo_piso_total  ) %>%
  summarise(quantidade = n()) %>%
  mutate (quantidade = as.numeric(quantidade)) %>%
 gather(Acima_teto_total , entre_teto_piso_total , abaixo_piso_total, key = Classificador, value = indicador)  %>%
 filter (indicador == 1) %>%
 arrange(Data_leilao) %>%
 select(-indicador) %>%
spread(key = Classificador,  value = quantidade) 

proporcao_intervalo_total[is.na(proporcao_intervalo_total)] <- 0

proporcao_intervalo_total <- proporcao_intervalo_total %>%
   mutate( Total = Acima_teto_total + entre_teto_piso_total + abaixo_piso_total) %>%
   mutate(percentual_abaixo = abaixo_piso_total/Total, percentual_acima = Acima_teto_total/Total, percentual_entre = entre_teto_piso_total/Total) %>%
   mutate(media_abaixo = 1, media_entre = 2, media_acima = 3)

media_abaixo <- cummean(proporcao_intervalo_total$percentual_abaixo)
media_entre <- cummean(proporcao_intervalo_total$percentual_entre)
media_acima <- cummean(proporcao_intervalo_total$percentual_acima)

proporcao_intervalo_total$media_abaixo <- media_abaixo
proporcao_intervalo_total$media_entre <- media_entre
proporcao_intervalo_total$media_acima <- media_acima

#Propostas Aceitas
#______________________________________________________
proporcao_intervalo_aceita <- proposta_ltn_2 %>%
  group_by(Data_leilao, Acima_teto_aceita , entre_teto_piso_aceita , abaixo_piso_aceita  ) %>%
  summarise(quantidade = n()) %>%
  mutate (quantidade = as.numeric(quantidade)) %>%
  gather(Acima_teto_aceita , entre_teto_piso_aceita , abaixo_piso_aceita, key = Classificador, value = indicador)  %>%
  filter (indicador == 1) %>%
  arrange(Data_leilao) %>%
  select(-indicador) %>%
  spread(key = Classificador,  value = quantidade) 

proporcao_intervalo_aceita[is.na(proporcao_intervalo_aceita)] <- 0

proporcao_intervalo_aceita <- proporcao_intervalo_aceita %>%
  mutate( Total = Acima_teto_aceita + entre_teto_piso_aceita + abaixo_piso_aceita) %>%
  mutate(percentual_abaixo = abaixo_piso_aceita/Total, percentual_acima = Acima_teto_aceita/Total, percentual_entre = entre_teto_piso_aceita/Total) %>%
  mutate(media_abaixo = 1, media_entre = 2, media_acima = 3)

media_abaixo_aceita <- cummean(proporcao_intervalo_aceita$percentual_abaixo)
media_entre_aceita <- cummean(proporcao_intervalo_aceita$percentual_entre)
media_acima_aceita <- cummean(proporcao_intervalo_aceita$percentual_acima)

proporcao_intervalo_aceita$media_abaixo <- media_abaixo_aceita
proporcao_intervalo_aceita$media_entre <- media_entre_aceita
proporcao_intervalo_aceita$media_acima <- media_acima_aceita






#____________________________________________________________________________________________________

#FUnções para formatação de número nos gráficos

funcao_percentual_taxa <- function(x){
  paste0(format(round(x, 4), big.mark = ".", decimal.mark = ","),"%")
}

funcao_formata_quantidade <- function(x){
  paste0(format(round(x, 2), big.mark = ".", decimal.mark = ","))
}
  
#__________________________________________________________________________

#Desvio Padrao por leilao e sua media:

#Proposta Total (relativa)

Desvio_total_relativo <- proposta_ltn_2 %>%
  group_by(Data_leilao, Proposta, Relativo_total_piso_secundario) %>%
  summarise() %>%
  group_by(Data_leilao) %>%
  summarise(Desvio_Padrao = sd(Relativo_total_piso_secundario, na.rm=TRUE), Media =mean(Relativo_total_piso_secundario, na.rm = TRUE))%>%
  mutate(Media_Desvio = mean(Desvio_Padrao, na.rm = TRUE))

#Proposta Aceita (relativa)
    
Desvio_aceita_relativo <- proposta_ltn_2 %>%
  group_by(Data_leilao, Proposta, Relativo_aceita_piso_secundario) %>%
  summarise() %>%
  group_by(Data_leilao) %>%
  summarise(Desvio_Padrao = sd(Relativo_aceita_piso_secundario, na.rm=TRUE))%>%
  mutate(Media_Desvio = mean(Desvio_Padrao, na.rm = TRUE))

#Desvio_aceita_relativo[is.na(Universo)] <- 0
#__________________________________________________________________________________________________________

#Cada proposta uma coluna (maximo e minimos)

# Analise_por_proposta <- proposta_ltn_2 %>%
#   group_by(Data_leilao, Proposta, Taxa  ) %>%
#   summarise() %>%
#   spread(Proposta, Taxa) 
  
#___________________________________________________________________________________________________________

#Cada proposta uma coluna (maximo e minimos)

# Analise_por_proposta_relativa_aceita <- proposta_ltn_2 %>%
#   group_by(Data_leilao, Proposta, Relativo_aceita_piso_secundario  ) %>%
#   summarise() %>%
#   spread(Proposta, Relativo_aceita_piso_secundario) 

b <- proposta_ltn_2 %>%
  group_by(Data_leilao, Proposta_fora_banda, Linha_superior, Linha_inferior) %>%
  summarise() %>%
  filter(!is.na(Proposta_fora_banda)) %>%
  ungroup()

f <- b %>%
  select(Data_leilao)


e <- proposta_ltn_2 %>%
  semi_join(f)

tabela <- e %>%
  group_by(Data_leilao, Taxa, demanda_quantidade,Secundario_piso, Relativo_total_piso_secundario) %>%
  summarise() %>%
  group_by(Data_leilao)  %>%
  summarise(Taxa = min(Taxa),Relativo_total_piso_secundario = min(Relativo_total_piso_secundario)) %>%
  left_join(e)

tabela_corrigida <- tabela[!duplicated(tabela$Data_leilao),]

menor_fora_intervalo <- e %>%
  group_by(Data_leilao, Proposta_fora_banda) %>%
  summarise() %>%
  group_by(Data_leilao) %>%
  summarise(Menor = min(Proposta_fora_banda, na.rm=TRUE), Desvio = Fator_distancia*sd(proposta_ltn_2$Relativo_aceita_piso_secundario, na.rm=TRUE)) %>%
  ungroup()

 cachorro_louco <- e %>%
   group_by(Data_leilao, Relativo_total_piso_secundario) %>%
   summarise() %>%
   ungroup() %>%
  group_by(Data_leilao) %>%
   mutate(ordem = rank(Relativo_total_piso_secundario)) %>%
  ungroup() %>%
   group_by(Data_leilao) %>%
   filter(ordem == 2) %>%
   rename (Segundo_menor = 2) %>%
   left_join(menor_fora_intervalo) %>%
   ungroup()
   
  cachorro <- cachorro_louco %>% 
   mutate(Cachorro = if_else(Segundo_menor <= (Menor+Desvio),0,Menor)) 
  
  cachorro$Cachorro[cachorro$Cachorro == 0]  <- NA
  
  cachorro_sem <- cachorro %>%
     filter(!is.na(Cachorro))
  
  v <- cachorro_sem %>%
    select(Data_leilao)
  
  
  w <- proposta_ltn_2 %>%
    semi_join(v)
  
  t <- w[!duplicated(w$Data_leilao),]
  
  
  tabela_cachorro <- t %>%
    group_by(Data_leilao, Taxa, demanda_quantidade,Secundario_piso, Relativo_total_piso_secundario) %>%
    summarise() %>%
    group_by(Data_leilao)  %>%
    summarise(Taxa = min(Taxa),Relativo_total_piso_secundario = min(Relativo_total_piso_secundario)) %>%
    left_join(t) %>%
    mutate(Segundo_menor = cachorro_sem$Segundo_menor)
  
  
  
  tabela_cachorro_corrigida <- tabela_cachorro[!duplicated(tabela_cachorro$Data_leilao),]  %>%
                               mutate(Segundo_menor = cachorro_sem$Segundo_menor) %>%
                               mutate(Segundo_menor_taxa = Secundario_piso*(1+(Segundo_menor/100)))
  
#_________________________________________________________________________________________________________
  
# Nomear base com Intervalor de Confiança de 99%
  
   # proposta_ltn_2_99 <- proposta_ltn_2
   # menor_fora_intervalo_99 <- menor_fora_intervalo
   # cachorro_99 <- cachorro
  
#___________________________________________________________________________________________________________

#Salvar a Base de Dados - Intervalor de 95% de confiança

save(list = c("proposta_ltn_2","proporcao_intervalo_total","proporcao_intervalo_aceita","e","menor_fora_intervalo","cachorro","tabela_corrigida","tabela_cachorro_corrigida"),file = "NTN_F_10.Rdata")

#Salvar a Base de Dados - Intervalor de 99% de confiança

#save(list = c("proposta_ltn_2_99","menor_fora_intervalo_99","cachorro_99"),file = "LTN_2_99.Rdata")


#____________________________________________________________________________________________________________


ui <- fluidPage(

plotlyOutput("propostas"),
  
plotlyOutput("propostas_vencimento"),   

plotlyOutput("proporcao_propostas"),

plotlyOutput("proporcao_propostas_aceitas"),

plotlyOutput("Total_propostas_relativa") ,

plotlyOutput("Histograma"),

plotlyOutput("Intervalo_total") ,

plotlyOutput("Intervalo_evento") ,



plotlyOutput("relativo") ,

plotlyOutput("acima"),

plotlyOutput("acima_nominal"),

plotlyOutput("propostas_box"),

plotlyOutput("propostas_teste")

)


server <- function(input, output) {
  
  
  output$propostas <- renderPlotly({
    
    
    plot_ly(proposta_ltn_2, x=~as.Date(Data_leilao,origin="1899-12-30")) %>%
      
      
      add_trace(y = ~Secundario_teto, name = "Secundario Teto" ,visible = "legendonly" ,type = 'scatter', mode = 'markers',
                marker = list(color = '#009933', symbol = 'triangle-up', size = 8),
                text = ~paste0("Data Leilão: ", Data_leilao,"<br>Vencimento: ",Titulo_vencimento,"<br>Prazo (anos): ",Prazo_anos ,"<br>Secundario Teto: ",funcao_percentual_taxa(Secundario_teto),"<br>Secundario Piso: ",funcao_percentual_taxa(Secundario_piso)),
                hoverinfo = "text"
                
               
      ) %>%
      
      
      add_trace(y = ~Secundario_piso, name = "Secundario Piso" ,visible = "legendonly",type = 'scatter', mode = 'markers', 
                marker = list(color = '#fdae61', symbol = 'triangle-down', size = 8),
                text = ~paste0("Data Leilão: ", Data_leilao,"<br>Vencimento: ",Titulo_vencimento,"<br>Prazo (anos): ",Prazo_anos ,"<br>Secundario Teto: ",funcao_percentual_taxa(Secundario_teto),"<br>Secundario Piso: ",funcao_percentual_taxa(Secundario_piso)),
                hoverinfo = "text"
                
               
      ) %>%
      
      
      
      add_trace(y = ~(Secundario_piso+Secundario_teto)/2, name = "Media Secundario" , 
                mode = "lines",line = list( width = 2, dash = 'dot', color = '#cccccc')
               
      ) %>%
      
      add_trace(y = ~Proposta_rejeitada,size = ~demanda_quantidade ,name = "Propostas Rejeitadas" ,
                marker = list (color = '#ff4d4d', line = list(color = '#ff0000')),    
                  
                text = ~paste0("Data Leilão: ", Data_leilao,"<br>Vencimento: ",Titulo_vencimento,"<br>Prazo (anos): ",Prazo_anos ,"<br>Taxa Proposta: ",funcao_percentual_taxa(Taxa),"<br>Taxa Média: ",funcao_percentual_taxa(Taxa_aceita_media)),
                hoverinfo = "text"
                
      ) %>%
      
      add_trace(y = ~Proposta_aceita ,size = ~demanda_quantidade,name = "Propostas Aceitas" ,
                marker = list (color = '#089ff7', line = list(color = '#0571b0' )),
                  
                text = ~paste0("Data Leilão: ", Data_leilao,"<br>Vencimento: ",Titulo_vencimento,"<br>Prazo (anos): ",Prazo_anos ,"<br>Taxa Proposta: ",funcao_percentual_taxa(Taxa),"<br>Taxa Média: ",funcao_percentual_taxa(Taxa_aceita_media),
                               "<br>Quantidade:",funcao_formata_quantidade(demanda_quantidade), "<br>Quantidade Aceita:",funcao_formata_quantidade(aceita_quantidade)),
                hoverinfo = "text"
                
      ) %>%
      
      
      layout(legend = list(orientation = 'h', x = 0.8, y = 1,
                           xanchor = 'center', yref = 'paper',
                           font = list(size = 14),
                           bgcolor = 'transparent'),
              title = "",
             xaxis = list(title = "<b>Vencimento - anos</b>", zeroline = TRUE,
                          
                          rangeselector = list(
                            buttons = list(
                              list(
                                count = 1,
                                label = "1 ano",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 2,
                                label = "2 anos",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 3,
                                label = "3 anos",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 4,
                                label = "4 anos",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 5,
                                label = "5 anos",
                                step = "year",
                                stepmode = "backward"),
                              
                              list(step = "all")))),
                          
                          #rangeslider = list(type = "date")),
             
             
             yaxis = list(side = 'left', title = '<b>LTN 2 anos - % a.a -</b> ', showline = FALSE ,showgrid = FALSE, zeroline = TRUE, ticksuffix = '%',hoverformat = '.2f' )) %>%
      #yaxis2 = list(side = 'right', overlaying = "y" ,title='Eixo - DPFe  ' ,titlefont = list(color = '#008000') ,showgrid = FALSE, zeroline = FALSE ,ticksuffix = '%',tickformat = '%' ,hoverformat = '.2f',hoverformat = '.0%')) %>%
      config(displayModeBar = FALSE) 
    #layout(hovermode = 'compare')
    
  })
  
  output$propostas_vencimento <- renderPlotly({
    
    
    plot_ly(proposta_ltn_2, x=~Titulo_data ) %>%
      
      
      
      add_trace(y = ~Secundario_teto, name = "Secundario Teto" ,visible = "legendonly" ,type = 'scatter', mode = 'markers',
             
                text = ~paste0("Data Leilão: ", Data_leilao,"<br>Vencimento: ",Titulo_vencimento,"<br>Prazo (anos): ",Prazo_anos ,"<br>Secundario Teto: ",funcao_percentual_taxa(Secundario_teto),"<br>Secundario Piso: ",funcao_percentual_taxa(Secundario_piso)),
                hoverinfo = "text"
                
               
      ) %>%
      
      
      add_trace(y = ~Secundario_piso, name = "Secundario Piso" ,visible = "legendonly",type = 'scatter', mode = 'markers', 
              
                text = ~paste0("Data Leilão: ", Data_leilao,"<br>Vencimento: ",Titulo_vencimento,"<br>Prazo (anos): ",Prazo_anos ,"<br>Secundario Teto: ",funcao_percentual_taxa(Secundario_teto),"<br>Secundario Piso: ",funcao_percentual_taxa(Secundario_piso)),
                hoverinfo = "text"
                
                
      ) %>%
      
      
      add_trace(y = ~(Secundario_piso+Secundario_teto)/2,visible = "legendonly" ,type = 'box',name = "Box" , 
                mode = "lines",line = list( width = 2, dash = 'dot', color = '#cccccc')
                
      ) %>%
      
      add_trace(y = ~Proposta_rejeitada,size = ~demanda_quantidade ,name = "Propostas Rejeitadas" ,type = 'scatter', mode = 'markers',
                color =~Ano  ,
                
                text = ~paste0("Data Leilão: ", Data_leilao,"<br>Vencimento: ",Titulo_vencimento,"<br>Prazo (anos): ",Prazo_anos ,"<br>Taxa Proposta: ",funcao_percentual_taxa(Taxa),"<br>Taxa Média: ",funcao_percentual_taxa(Taxa_aceita_media)),
                hoverinfo = "text"
                
      ) %>%
      
      add_trace(y = ~Proposta_aceita ,size = ~demanda_quantidade,name = "Propostas Aceitas" ,type = 'scatter', mode = 'markers',
                color =~Ano,
                text = ~paste0("Data Leilão: ", Data_leilao,"<br>Vencimento: ",Titulo_vencimento,"<br>Prazo (anos): ",Prazo_anos ,"<br>Taxa Proposta: ",funcao_percentual_taxa(Taxa),"<br>Taxa Média: ",funcao_percentual_taxa(Taxa_aceita_media),
                               "<br>Quantidade:",funcao_formata_quantidade(demanda_quantidade), "<br>Quantidade Aceita:",funcao_formata_quantidade(aceita_quantidade)),
                hoverinfo = "text"
                
      ) %>%
      
      
      layout(legend = list(orientation = 'h', x = 0.8, y = 1,
                           xanchor = 'center', yref = 'paper',
                           font = list(size = 14),
                           bgcolor = 'transparent'),
             title = "",
             xaxis = list(title = "<b>Vencimento - anos</b>", zeroline = TRUE,
                          
                          rangeselector = list(
                            buttons = list(
                              list(
                                count = 1,
                                label = "1 ano",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 2,
                                label = "2 anos",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 3,
                                label = "3 anos",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 4,
                                label = "4 anos",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 5,
                                label = "5 anos",
                                step = "year",
                                stepmode = "backward"),
                              
                              list(step = "all")))),
             
             
             
             
             yaxis = list(side = 'left', title = '<b>LTN 2 anos - % a.a -</b> ', showline = FALSE ,showgrid = FALSE, zeroline = TRUE, ticksuffix = '%',hoverformat = '.2f' )) %>%
      #yaxis2 = list(side = 'right', overlaying = "y" ,title='Eixo - DPFe  ' ,titlefont = list(color = '#008000') ,showgrid = FALSE, zeroline = FALSE ,ticksuffix = '%',tickformat = '%' ,hoverformat = '.2f',hoverformat = '.0%')) %>%
      config(displayModeBar = FALSE) 
    #layout(hovermode = 'compare')
    
  })
  
   output$proporcao_propostas <- renderPlotly({
    
    plot_ly(proporcao_intervalo_total, x = ~Data_leilao) %>% 
    add_trace(y = ~media_abaixo, type = 'bar', name = 'Abaixo', marker = list(color = '#1b9e77')) %>%
    add_trace(y = ~media_entre,  type = "bar",name = 'Entre', marker = list(color = '#d95f02')) %>%
    add_trace(y = ~media_acima,  type = "bar",name = 'Acima', marker = list(color = '#7570b3')) %>%
       
    layout(margin = list( b = 20) ,annotations = 
             list(x = 1, y = -0.1, text = "<b>Fonte:</b> Anexo 1.2 - RMD.", 
                  showarrow = F, xref='paper', yref='paper', 
                  xanchor='right', yanchor='auto', xshift=100, yshift=-80,
                  font=list(size=12, color="#696969")),
           title = "",
           xaxis = list(title = ""
                        ),
           
           yaxis = list(title = "Composição DPF", zeroline = TRUE,  tickformat = '%',
                        showline = FALSE, showgrid = FALSE,hoverformat = '.0%' ,hoverformat = '.2f'), barmode = 'stack') %>%
    config(displayModeBar = FALSE) %>%
    layout(hovermode = 'compare')
     
   })
  
  
  output$propostas_box <- renderPlotly({
    
    
    plot_ly(proposta_ltn_2, x=~as.Date(Data_leilao,origin="1899-12-30")) %>%
      
      
      add_trace(y = ~Proposta_aceita ,type = 'box',boxpoints = FALSE,
                marker = list(color = 'green'),
                line = list(color = 'rgb(7,40,89)'),
                name = "All Points"
      ) %>%
      
      add_trace(y = ~Proposta_rejeitada ,type = 'box',boxpoints = FALSE,
                marker = list(color = 'red'),
                line = list(color = 'orange'),
                name = "All Points"
      ) %>%
      
      
      layout(legend = list(orientation = 'h', x = 0.8, y = 1,
                           xanchor = 'center', yref = 'paper',
                           font = list(size = 14),
                           bgcolor = 'transparent'),
             title = "",
             xaxis = list(title = "<b>Vencimento - anos</b>", zeroline = TRUE,
                          
                          rangeselector = list(
                            buttons = list(
                              list(
                                count = 1,
                                label = "1 ano",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 2,
                                label = "2 anos",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 3,
                                label = "3 anos",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 4,
                                label = "4 anos",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 5,
                                label = "5 anos",
                                step = "year",
                                stepmode = "backward"),
                              
                              list(step = "all")))),
             
             
             yaxis = list(side = 'left', title = '<b>LTN 2 anos - % a.a -</b> ', showline = FALSE ,showgrid = FALSE, zeroline = TRUE, ticksuffix = '%',hoverformat = '.2f' )) %>%
      #yaxis2 = list(side = 'right', overlaying = "y" ,title='Eixo - DPFe  ' ,titlefont = list(color = '#008000') ,showgrid = FALSE, zeroline = FALSE ,ticksuffix = '%',tickformat = '%' ,hoverformat = '.2f',hoverformat = '.0%')) %>%
      config(displayModeBar = FALSE) 
    #layout(hovermode = 'compare')
    
  }) 
  
  output$proporcao_propostas_aceitas <- renderPlotly({
    
    plot_ly(proporcao_intervalo_aceita, x = ~Data_leilao) %>% 
      add_trace(y = ~media_abaixo, type = 'bar', name = 'Abaixo', marker = list(color = '#1b9e77')) %>%
      add_trace(y = ~media_entre,  type = "bar",name = 'Entre', marker = list(color = '#d95f02')) %>%
      add_trace(y = ~media_acima,  type = "bar",name = 'Acima', marker = list(color = '#7570b3')) %>%
      
      layout(margin = list( b = 20) ,annotations = 
               list(x = 1, y = -0.1, text = "<b>Fonte:</b> Anexo 1.2 - RMD.", 
                    showarrow = F, xref='paper', yref='paper', 
                    xanchor='right', yanchor='auto', xshift=100, yshift=-80,
                    font=list(size=12, color="#696969")),
             title = "",
             xaxis = list(title = ""
             ),
             
             yaxis = list(title = "Composição DPF", zeroline = TRUE,  tickformat = '%',
                          showline = FALSE, showgrid = FALSE,hoverformat = '.0%' ,hoverformat = '.2f'), barmode = 'stack') %>%
      config(displayModeBar = FALSE) %>%
      layout(hovermode = 'compare')
    
  })
  
  
  output$propostas_box <- renderPlotly({
    
    
    plot_ly(proposta_ltn_2, x=~as.Date(Data_leilao,origin="1899-12-30")) %>%
      
      
      add_trace(y = ~Proposta_aceita ,type = 'box',boxpoints = FALSE,
                marker = list(color = 'green'),
                line = list(color = 'rgb(7,40,89)'),
                name = "All Points"
      ) %>%
      
      add_trace(y = ~Proposta_rejeitada ,type = 'box',boxpoints = FALSE,
                marker = list(color = 'red'),
                line = list(color = 'orange'),
                name = "All Points"
      ) %>%
      
      
      layout(legend = list(orientation = 'h', x = 0.8, y = 1,
                           xanchor = 'center', yref = 'paper',
                           font = list(size = 14),
                           bgcolor = 'transparent'),
             title = "",
             xaxis = list(title = "<b>Vencimento - anos</b>", zeroline = TRUE,
                          
                          rangeselector = list(
                            buttons = list(
                              list(
                                count = 1,
                                label = "1 ano",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 2,
                                label = "2 anos",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 3,
                                label = "3 anos",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 4,
                                label = "4 anos",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 5,
                                label = "5 anos",
                                step = "year",
                                stepmode = "backward"),
                              
                              list(step = "all")))),
             
             #rangeslider = list(type = "date")),
             
             
             yaxis = list(side = 'left', title = '<b>LTN 2 anos - % a.a -</b> ', showline = FALSE ,showgrid = FALSE, zeroline = TRUE, ticksuffix = '%',hoverformat = '.2f' )) %>%
      #yaxis2 = list(side = 'right', overlaying = "y" ,title='Eixo - DPFe  ' ,titlefont = list(color = '#008000') ,showgrid = FALSE, zeroline = FALSE ,ticksuffix = '%',tickformat = '%' ,hoverformat = '.2f',hoverformat = '.0%')) %>%
      config(displayModeBar = FALSE) 
    #layout(hovermode = 'compare')
    
  }) 
  
  
  output$propostas_teste <- renderPlotly({
    
    
    plot_ly(proposta_ltn_2, x=~as.Date(Data_leilao,origin="1899-12-30")) %>%
      
      
      add_trace(y = ~Relativo_aceita_piso_secundario ,type = 'box',
                marker = list(color = 'green'),
                line = list(color = 'rgb(7,40,89)'),
                name = "All Points"
      ) %>%
      
      add_trace(y = ~Relativo_rejeitada_piso_secundario ,type = 'box',
                marker = list(color = 'red'),
                line = list(color = 'orange'),
                name = "All Points"
      ) %>%
      
      
      layout(legend = list(orientation = 'h', x = 0.8, y = 1,
                           xanchor = 'center', yref = 'paper',
                           font = list(size = 14),
                           bgcolor = 'transparent'),
             title = "",
             xaxis = list(title = "<b>Vencimento - anos</b>", zeroline = TRUE,
                          
                          rangeselector = list(
                            buttons = list(
                              list(
                                count = 1,
                                label = "1 ano",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 2,
                                label = "2 anos",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 3,
                                label = "3 anos",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 4,
                                label = "4 anos",
                                step = "year",
                                stepmode = "backward"),
                              list(
                                count = 5,
                                label = "5 anos",
                                step = "year",
                                stepmode = "backward"),
                              
                              list(step = "all")))),
             
             
             
             
             yaxis = list(side = 'left', title = '<b>LTN 2 anos - % a.a -</b> ', showline = FALSE ,showgrid = FALSE, zeroline = TRUE, ticksuffix = '%',hoverformat = '.2f' )) %>%
      #yaxis2 = list(side = 'right', overlaying = "y" ,title='Eixo - DPFe  ' ,titlefont = list(color = '#008000') ,showgrid = FALSE, zeroline = FALSE ,ticksuffix = '%',tickformat = '%' ,hoverformat = '.2f',hoverformat = '.0%')) %>%
      config(displayModeBar = FALSE) 
    #layout(hovermode = 'compare')
    
  }) 
  
  output$acima <- renderPlotly({
    
    
    plot_ly(proposta_ltn_2, x=~Data_leilao) %>%
      
      add_trace(y = ~Relativo_total_piso_secundario ,size = ~demanda_quantidade ,color = ~as.factor(aceitacao),name = "Propostas" ,type = 'scatter', mode = 'markers' #size =~valor_venda, #marker = list(size = 18),  
                
      ) %>%
      
      
      
      
      layout(legend = list(orientation = 'h', x = 0.8, y = 1,
                           xanchor = 'center', yref = 'paper',
                           font = list(size = 14),
                           bgcolor = 'transparent'),
             
             title = "",
             xaxis = list(title = "<b>Vencimento - anos</b>", zeroline = TRUE),
             
             yaxis = list(side = 'left', title = '<b>Taxa Média - a.a -</b> ', showline = FALSE ,showgrid = FALSE, zeroline = TRUE, ticksuffix = '%', hoverformat = '.2f')) %>%
      #yaxis2 = list(side = 'right', overlaying = "y" ,title='Eixo - DPFe  ' ,titlefont = list(color = '#008000') ,showgrid = FALSE, zeroline = FALSE ,ticksuffix = '%', hoverformat = '.2f')) %>%
      config(displayModeBar = FALSE) 
    #layout(hovermode = 'compare')
    
  })
  
  output$acima_nominal <- renderPlotly({
    
    
    plot_ly(proposta_ltn_2, x=~Data_leilao) %>%
      
      add_trace(y = ~Nominal_acima_piso_secundario ,size = ~demanda_quantidade ,color = ~as.factor(aceitacao),name = "Propostas" ,type = 'scatter', mode = 'markers' #size =~valor_venda, #marker = list(size = 18),  
               
      ) %>%
      
      
      
      
      layout(legend = list(orientation = 'h', x = 0.8, y = 1,
                           xanchor = 'center', yref = 'paper',
                           font = list(size = 14),
                           bgcolor = 'transparent'),
             title = "",
             xaxis = list(title = "<b>Vencimento - anos</b>", zeroline = TRUE),
             
             yaxis = list(side = 'left', title = '<b>Taxa Média - a.a -</b> ', showline = FALSE ,showgrid = FALSE, zeroline = TRUE, ticksuffix = '%', hoverformat = '.2f')) %>%
      #yaxis2 = list(side = 'right', overlaying = "y" ,title='Eixo - DPFe  ' ,titlefont = list(color = '#008000') ,showgrid = FALSE, zeroline = FALSE ,ticksuffix = '%', hoverformat = '.2f')) %>%
      config(displayModeBar = FALSE) 
    #layout(hovermode = 'compare')
    
  })
  
  output$relativo <- renderPlotly({
    
    
    plot_ly(proposta_ltn_2, x=~Data_leilao) %>%
      
      add_trace(y = ~Relativo_aceita_piso_secundario,name = "Propostas Aceitas" ,size = ~demanda_quantidade,type = 'scatter', mode = 'markers', marker = list (color = '#0571b0')   
                
      ) %>%
      
      add_trace(y = ~Relativo_rejeitada_piso_secundario,name = "Propostas Rejeitadas" ,size = ~demanda_quantidade,type = 'scatter', mode = 'markers', marker = list (color = '#fdae610')    
                
      ) %>%
      
      
      add_trace(y = ~Media_total_relativo, name = "Media Total" , 
                mode = "lines",line = list( width = 2)
                
      ) %>%
      
      add_trace(y = ~media_aceita_relativo, name = "Media Aceitas" , 
                mode = "lines",line = list( width = 2)
                
      ) %>%
      
      add_trace(y = ~media_rejeitada_relativo, name = "Media Rejeitadas" , 
                mode = "lines",line = list( width = 2)
                
      ) %>%
      
      add_trace(y = ~(Media_total_relativo-2.95*sd(Relativo_total_piso_secundario,na.rm =TRUE)), name = "Intervalor Piso" , 
                mode = "lines",line = list( width = 2)
                
      ) %>%
      
      add_trace(y = ~(Media_total_relativo+2.95*sd(Relativo_total_piso_secundario,na.rm =TRUE)), name = "Intervalor Teto" , 
                mode = "lines",line = list( width = 2)
                
      ) %>%
      
      add_trace(y = ~(Media_total_relativo-1.96*sd(Relativo_total_piso_secundario,na.rm =TRUE)), name = "Intervalor Piso" , 
                mode = "lines",line = list( width = 2)
                
      ) %>%
      
      add_trace(y = ~(media_aceita_relativo-2.95*sd(Relativo_aceita_piso_secundario,na.rm =TRUE)), name = "Intervalor aceita Teto" , 
                mode = "lines",line = list( width = 2)
                
      ) %>%
      
      
      layout(legend = list(orientation = 'h', x = 0.8, y = 1,
                           xanchor = 'center', yref = 'paper',
                           font = list(size = 14),
                           bgcolor = 'transparent'),
             
             title = "",
             xaxis = list(title = "<b>Vencimento - anos</b>", zeroline = TRUE),
             
             yaxis = list(side = 'left', title = '<b>Taxa Média - a.a -</b> ', showline = FALSE ,showgrid = FALSE, zeroline = TRUE, ticksuffix = '%', hoverformat = '.2f')) %>%
      #yaxis2 = list(side = 'right', overlaying = "y" ,title='Eixo - DPFe  ' ,titlefont = list(color = '#008000') ,showgrid = FALSE, zeroline = FALSE ,ticksuffix = '%', hoverformat = '.2f')) %>%
      config(displayModeBar = FALSE) 
    #layout(hovermode = 'compare')
    
  }) 
  
  output$Total_propostas_relativa <- renderPlotly({
    
    
    plot_ly(proposta_ltn_2, x=~Data_leilao) %>%
      
      add_trace(y = ~Relativo_aceita_piso_secundario,name = "Propostas Aceitas" ,size = ~demanda_quantidade, 
                marker = list (color = '#089ff7', line = list(color = '#0571b0' )),
                text = ~paste0("Data Leilão: ", Data_leilao,"<br>Vencimento: ",Titulo_vencimento,"<br>Prazo (anos): ",Prazo_anos ,"<br>Taxa Proposta: ",funcao_percentual_taxa(Taxa),"<br>Piso Secundario: ",funcao_percentual_taxa(Secundario_piso),
                               "<br>Relativo Secundario: ",funcao_percentual_taxa(Relativo_aceita_piso_secundario),
                               "<br>Quantidade:",funcao_formata_quantidade(demanda_quantidade), "<br>Quantidade Aceita:",funcao_formata_quantidade(aceita_quantidade)),
                hoverinfo = "text"
                
                
      ) %>%
      
      add_trace(y = ~Relativo_rejeitada_piso_secundario,name = "Propostas Rejeitadas" ,size = ~demanda_quantidade, 
                marker = list (color = '#ff4d4d', line = list(color = '#ff0000')),
                text = ~paste0("Data Leilão: ", Data_leilao,"<br>Vencimento: ",Titulo_vencimento,"<br>Prazo (anos): ",Prazo_anos ,"<br>Taxa Proposta: ",funcao_percentual_taxa(Taxa),"<br>Piso Secundario: ",funcao_percentual_taxa(Secundario_piso),
                               "<br>Relativo Secundario: ",funcao_percentual_taxa(Relativo_rejeitada_piso_secundario),
                               
                "<br>Quantidade:",funcao_formata_quantidade(demanda_quantidade), "<br>Quantidade Aceita:",funcao_formata_quantidade(aceita_quantidade)),
                hoverinfo = "text"
                
                
      ) %>%
      
      
      
      
      layout(legend = list(orientation = 'h', x = 0.8, y = 1,
                           xanchor = 'center', yref = 'paper',
                           font = list(size = 14),
                           bgcolor = 'transparent'),
             
             title = "",
             xaxis = list(title = "<b>Vencimento - anos</b>", zeroline = TRUE),
             
             yaxis = list(side = 'left', title = '<b>Taxa Média - a.a -</b> ', showline = FALSE ,showgrid = FALSE, zeroline = TRUE, ticksuffix = '%', hoverformat = '.2f')) %>%
            config(displayModeBar = FALSE) 
    
  }) 
  
  output$Histograma <- renderPlotly({
    
    
    plot_ly(proposta_ltn_2, type = 'histogram', alpha = 0.6 ) %>%
      
     add_trace(x = ~Relativo_aceita_piso_secundario,name = 'Dist - Aceitas',
               text = ~paste0("Media: ", funcao_percentual_taxa(mean(Relativo_aceita_piso_secundario, na.rm=TRUE)),"<br>Desvio Padrão: ",funcao_percentual_taxa(sd(Relativo_aceita_piso_secundario,na.rm=TRUE))),
               
               hoverinfo = "text"
               
                
                
      ) %>%
      
      add_trace(x = ~Relativo_rejeitada_piso_secundario,name = 'Dist - Rejeitada',
                
                  text = ~paste0("Media: ", funcao_percentual_taxa(mean(Relativo_rejeitada_piso_secundario, na.rm=TRUE)),"<br>Desvio Padrão: ",funcao_percentual_taxa(sd(Relativo_rejeitada_piso_secundario,na.rm=TRUE))),
                               
                 hoverinfo = "text"
                
                
      ) %>%
      
      add_trace(x = ~Relativo_total_piso_secundario,name = 'Dist - Total',
                
                text = ~paste0("Media: ", funcao_percentual_taxa(mean(Relativo_total_piso_secundario, na.rm=TRUE)),"<br>Desvio Padrão: ",funcao_percentual_taxa(sd(Relativo_total_piso_secundario,na.rm=TRUE))),
                
                hoverinfo = "text"
                
                
      ) %>%
      
      
      
      # add_segments(x=~mean(Relativo_total_piso_secundario, na.rm=TRUE), y=0, xend=~mean(Relativo_total_piso_secundario, na.rm=TRUE), yend=300, 
      #              line=list(color="red", width = 2), name = 'Media Total', visible = "legendonly"
      #              
      #              )%>%
      # 
    
      layout(legend = list(orientation = 'h', x = 0.8, y = 1,
                           xanchor = 'center', yref = 'paper',
                           font = list(size = 14),
                           bgcolor = 'transparent'),
             
             title = "",
             xaxis = list(title = "<b>Vencimento - anos</b>", zeroline = FALSE),
             barmode = "overlay",
             
             yaxis = list(side = 'left', title = '<b>Frequencia</b> ', showline = FALSE ,showgrid = FALSE, zeroline = TRUE)) %>%
      config(displayModeBar = FALSE) 
    
  })
  
  output$Intervalo_total <- renderPlotly({
    
    
    plot_ly(proposta_ltn_2, x=~Data_leilao) %>%
      
      add_trace(y = ~Relativo_aceita_piso_secundario,name = "Propostas Aceitas" ,size = ~demanda_quantidade, 
                marker = list (color = '#089ff7', line = list(color = '#0571b0' )),
                text = ~paste0("Data Leilão: ", Data_leilao,"<br>Vencimento: ",Titulo_vencimento,"<br>Prazo (anos): ",Prazo_anos ,"<br>Taxa Proposta: ",funcao_percentual_taxa(Taxa),"<br>Piso Secundario: ",funcao_percentual_taxa(Secundario_piso),
                               "<br>Relativo Secundario: ",funcao_percentual_taxa(Relativo_aceita_piso_secundario),
                               "<br>Quantidade:",funcao_formata_quantidade(demanda_quantidade), "<br>Quantidade Aceita:",funcao_formata_quantidade(aceita_quantidade)),
                hoverinfo = "text"
                
                
      ) %>%
      
      add_trace(y = ~Relativo_rejeitada_piso_secundario,name = "Propostas Rejeitadas" ,size = ~demanda_quantidade, 
                marker = list (color = '#ff4d4d', line = list(color = '#ff0000')),
                text = ~paste0("Data Leilão: ", Data_leilao,"<br>Vencimento: ",Titulo_vencimento,"<br>Prazo (anos): ",Prazo_anos ,"<br>Taxa Proposta: ",funcao_percentual_taxa(Taxa),"<br>Piso Secundario: ",funcao_percentual_taxa(Secundario_piso),
                               "<br>Relativo Secundario: ",funcao_percentual_taxa(Relativo_rejeitada_piso_secundario),
                               
                               "<br>Quantidade:",funcao_formata_quantidade(demanda_quantidade), "<br>Quantidade Aceita:",funcao_formata_quantidade(aceita_quantidade)),
                hoverinfo = "text"
                
                
      ) %>%
      
      
      add_trace(y = ~Limite_inferior, name = "Intervalo Piso" , 
                mode = "lines",line = list(color ='black')
                
      ) %>%
      
      add_trace(y = ~Limite_superior, name = "Intervalo Teto" , 
                mode = "lines",line = list(color ='black')
                
      ) %>%
      
      # add_trace(y = ~Proposta_fora_banda+1.96*sd(Relativo_total_piso_secundario,na.rm =TRUE), name = "Intervalo Teto" , 
      #           mode = "lines",line = list(color ='black')
      #           
      # ) %>%
      # 
      # add_trace(y = ~Proposta_fora_banda-1.96*sd(Relativo_total_piso_secundario,na.rm =TRUE), name = "Intervalo Teto" , 
      #           mode = "lines",line = list(color ='black')
      #           
      # ) %>%
      # 
      
      #add_markers(x=~Data_leilao, y = proposta_ltn_2$Relativo_total_piso_secundario[proposta_ltn_2$Relativo_total_piso_secundario < proposta_ltn_2$Media_total_relativo-2.96*sd(proposta_ltn_2$Relativo_total_piso_secundario,na.rm =TRUE)], marker = list(color = 'black', symbol = 'cross')) %>%
      
      #add_markers(y =~ Proposta_fora_banda+2.95*sd(Relativo_total_piso_secundario,na.rm =TRUE), marker = list(color = 'black', symbol = 'cross')) %>%
      
      # add_markers(y =~Proposta_fora_banda,type = 'scatter', mode = 'markers' ,marker = list(color = 'black', symbol = 'cross')
      #             
      #             #error_y = ~list(array = 2*sd(Relativo_total_piso_secundario,na.rm =TRUE),
      #                             #color = 'orange')
      #             
      #             
      #             ) %>%
      # 
      
      
      
      
      
      layout(legend = list(orientation = 'h', x = 0.8, y = 1,
                           xanchor = 'center', yref = 'paper',
                           font = list(size = 14),
                           bgcolor = 'transparent'),
             
             title = "",
             xaxis = list(title = "<b>Vencimento - anos</b>", zeroline = TRUE),
             
             yaxis = list(side = 'left', title = '<b>Taxa Média - a.a -</b> ', showline = FALSE ,showgrid = FALSE, zeroline = TRUE, ticksuffix = '%', hoverformat = '.2f')) %>%
      config(displayModeBar = FALSE) 
    
  }) 
  
  output$Intervalo_evento <- renderPlotly({
    
    
    plot_ly(e, x=~Data_leilao) %>%
      
      add_trace(y = ~Relativo_aceita_piso_secundario,name = "Propostas Aceitas" ,size = ~demanda_quantidade, 
                marker = list (color = '#089ff7', line = list(color = '#0571b0' )),
                text = ~paste0("Data Leilão: ", Data_leilao,"<br>Vencimento: ",Titulo_vencimento,"<br>Prazo (anos): ",Prazo_anos ,"<br>Taxa Proposta: ",funcao_percentual_taxa(Taxa),"<br>Piso Secundario: ",funcao_percentual_taxa(Secundario_piso),
                               "<br>Relativo Secundario: ",funcao_percentual_taxa(Relativo_aceita_piso_secundario),
                               "<br>Quantidade:",funcao_formata_quantidade(demanda_quantidade), "<br>Quantidade Aceita:",funcao_formata_quantidade(aceita_quantidade)),
                hoverinfo = "text"
                
                
      ) %>%
      
      add_trace(y = ~Relativo_rejeitada_piso_secundario,name = "Propostas Rejeitadas" ,size = ~demanda_quantidade, 
                marker = list (color = '#ff4d4d', line = list(color = '#ff0000')),
                text = ~paste0("Data Leilão: ", Data_leilao,"<br>Vencimento: ",Titulo_vencimento,"<br>Prazo (anos): ",Prazo_anos ,"<br>Taxa Proposta: ",funcao_percentual_taxa(Taxa),"<br>Piso Secundario: ",funcao_percentual_taxa(Secundario_piso),
                               "<br>Relativo Secundario: ",funcao_percentual_taxa(Relativo_rejeitada_piso_secundario),
                               
                               "<br>Quantidade:",funcao_formata_quantidade(demanda_quantidade), "<br>Quantidade Aceita:",funcao_formata_quantidade(aceita_quantidade)),
                hoverinfo = "text"
                
                
      ) %>%
      
      
      add_trace(y = ~Limite_inferior, name = "Intervalo Piso" , 
                mode = "lines",line = list(color ='black')
                
      ) %>%
      
      add_trace(y = ~Limite_superior, name = "Intervalo Teto" , 
                mode = "lines",line = list(color ='black')
                
      ) %>%
      
     
    
    add_markers(x=~menor_fora_intervalo$Data_leilao, y =~menor_fora_intervalo$Menor,type = 'scatter',name = 'Distância' ,visible = "legendonly",mode = 'markers' ,marker = list(color = 'black', symbol = 'cross'),
                
                error_y = list(array =~menor_fora_intervalo$Desvio,
                color = 'orange')
                
                
    ) %>%
      
      #add_markers(y =~Linha_superior,type = 'scatter', mode = 'markers' ,marker = list(color = 'green', symbol = 'star-triangle-down-open-dot'))%>%
      #add_markers(y =~Linha_inferior,type = 'scatter', mode = 'markers' ,marker = list(color = 'orange', symbol = 'star-square-dot'))%>%
      
      
       
      
      
      
      layout(legend = list(orientation = 'h', x = 0.8, y = 1,
                           xanchor = 'center', yref = 'paper',
                           font = list(size = 14),
                           bgcolor = 'transparent'),
             
             title = "",
             xaxis = list(title = "<b>Vencimento - anos</b>", zeroline = TRUE),
             
             yaxis = list(side = 'left', title = '<b>Taxa Média - a.a -</b> ', showline = FALSE ,showgrid = FALSE, zeroline = TRUE, ticksuffix = '%', hoverformat = '.2f')) %>%
      config(displayModeBar = FALSE) 
    
  }) 
  

  
  
}


shinyApp(ui = ui, server = server)

